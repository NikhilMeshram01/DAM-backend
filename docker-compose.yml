
services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - dam-network
    volumes:
      - redis_data:/data

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: secret123
    networks:
      - dam-network
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret123
    depends_on:
      - mongodb
    networks:
      - dam-network

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    networks:
      - dam-network
    command: server /data --console-address ":9001"

  api:
    build: .
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - mongodb
      - minio
    networks:
      - dam-network
    environment:
      - REDIS_HOST=redis
      - MONGO_URL=mongodb://mongoadmin:secret123@mongodb:27017
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    command: node dist/server.js

  worker:
    build: .
    depends_on:
      - redis
      - mongodb
    networks:
      - dam-network
    environment:
      - REDIS_HOST=redis
      - MONGO_URL=mongodb://mongoadmin:secret123@mongodb:27017
    command: node dist/workers/asset.worker.js

volumes:
  redis_data:
  mongo_data:
  minio_data:

networks:
  dam-network:
    driver: bridge
